[{"/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/App.js":"1","/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/index.js":"2","/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/components/PostList.jsx":"3","/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/components/Post.jsx":"4"},{"size":514,"mtime":1609436123490,"results":"5","hashOfConfig":"6"},{"size":200,"mtime":1609414687985,"results":"7","hashOfConfig":"6"},{"size":878,"mtime":1609435820496,"results":"8","hashOfConfig":"6"},{"size":2875,"mtime":1609526353918,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l1caxx",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/App.js",[],"/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/index.js",[],"/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/components/PostList.jsx",[],"/home/dci/Documents/PROJEKTE/REACT-PROJEKTE/react-blog-comment/src/components/Post.jsx",["19","20"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst COMMENT_INITIAL_STATE = {\n  display_name: \"\",\n  body: \"\",\n};\n\nconst Post = (props) => {\n  const { id } = props.match.params;\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  // const [display_name, setDisplay_name] = useState('');\n  // const [body, setBody] = useState('');\n  const [comment, setComment] = useState(COMMENT_INITIAL_STATE);\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(\n        `https://react-yazi-yorum.herokuapp.com/posts/${id}/comments`,\n        comment\n      )\n      .then((response) => {\n        setComments([...comments, response.data]);\n        setComment(COMMENT_INITIAL_STATE);\n      })\n      .catch((error) => {\n        window.alert(error);\n        setComment(COMMENT_INITIAL_STATE);\n      });\n  };\n\n  const handleOnChange = (e) => {\n    setComment({ ...comment, [e.target.name]: e.target.value });\n  };\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(`https://react-yazi-yorum.herokuapp.com/posts/${id}`),\n        axios.get(\n          `https://react-yazi-yorum.herokuapp.com/posts/${id}/comments`\n        ),\n      ])\n      .then((responses) => {\n        setPost(responses[0].data);\n        setComments(responses[1].data);\n      })\n      .catch((err) => {\n        window.alert(err);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <h2 className=\"ui header\">{post.title}</h2>\n      <p>{post.created_at}</p>\n      <p>{post.content}</p>\n      <h3>Comments</h3>\n      {comments.map((comment) => {\n        return (\n          <div key={comment.id} className=\"ui relaxed list\">\n            <div className=\"item\">\n              <img\n                alt={comment.display_name}\n                className=\"ui avatar image\"\n                src=\"/images/avatar/small/daniel.jpg\"\n              />\n              <div className=\"content\">\n                <a className=\"header\">{comment.display_name}</a>\n                <div className=\"description\">{comment.body}</div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n      <h3>Your Comment</h3>\n      <form\n        className=\"ui form\"\n        onSubmit={handleCommentSubmit}\n      >\n        <div className=\"ui mini icon input\">\n          <input\n            name=\"display_name\"\n            type=\"text\"\n            placeholder=\"Your Name\"\n            onChange={handleOnChange}\n            value={comment.display_name}\n          />\n        </div>\n        <textarea\n          name=\"body\"\n          onChange={handleOnChange}\n          value={comment.body}\n          placeholder=\"Your Comment\"\n          rows=\"3\"\n        ></textarea>\n        <button type=\"submit\" className=\"ui blue button\">\n          Send Comment\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default Post;\n",{"ruleId":"21","severity":1,"message":"22","line":53,"column":6,"nodeType":"23","endLine":53,"endColumn":8,"suggestions":"24"},{"ruleId":"25","severity":1,"message":"26","line":71,"column":17,"nodeType":"27","endLine":71,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["28"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"29","fix":"30"},"Update the dependencies array to be: [id]",{"range":"31","text":"32"},[1405,1407],"[id]"]